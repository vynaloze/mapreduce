syntax = "proto3";

option go_package = "github.com/vynaloze/mapreduce/api";


message FileFormat {
  enum Format {
    TEXT = 0;
    CSV = 1;
  }
  Format format = 2;
}

message DFSFile {
  string location = 1;
  FileFormat format = 2;
  int64 size_bytes = 3;
}

message InputSpec {
  repeated DFSFile input_files = 1;
  int64 input_split_size_bytes = 2;
}

message OutputSpec {
  int64 output_partitions = 1;
  string output_location = 2;
  FileFormat output_format = 3;
}

message Spec {
  InputSpec in = 1;
  OutputSpec out = 2;

  //TODO string mapper = 3;
  //TODO string reducer = 4;

  // TODO params
}

message Job {
  string name = 1;
  Spec spec = 2;
}

message JobStatus {
  string message = 1;
}

service Master {
  rpc Submit(Job) returns (stream JobStatus) {}
}




message MapReduceExecutable {
  repeated string mappers = 1;
  repeated string reducers = 2;
  bytes executable = 3;
}

message Empty {
}

service MapReduceRegistry {
  rpc Register(MapReduceExecutable) returns (Empty) {}
}




message Key {
  string key = 1;
}

message Value {
  string value = 1;
}

message Pair {
  Key key = 1;
  Value value = 2;
}

service MapReduce {
  rpc Map(Pair) returns (stream Pair) {}
  rpc Reduce(stream Pair) returns (stream Pair) {}
}
