syntax = "proto3";

option go_package = "github.com/vynaloze/mapreduce/engine/api";

import "api/mapreduce.proto";
import "api/submit.proto";

message Split {
  DFSFile source = 1;
  int64 offset = 2;
  int64 limit = 3;
}

message Region {
  string addr = 1;

  int64 partition = 2;
  string taskId = 3;
}


message MapTask {
  string id = 1;
  Split input_split = 2;
  int64 partitions = 3;
  string mapper = 4;
}

message MapTaskStatus {
  MapTask task = 1;
  Region region = 2;
  // stats?
}


message ReduceTask {
  OutputSpec output_spec = 1;
  int64 partition = 2;
  string reducer = 3;
}

message ReduceTaskStatus {
  DFSFile result = 1;
  // stats?
}


service MapWorker {
  rpc Map(MapTask) returns (stream MapTaskStatus) {}
  rpc Get(Region) returns (stream Pair) {}
}

service ReduceWorker {
  rpc Reduce(ReduceTask) returns (stream ReduceTaskStatus) {}
  rpc Notify(stream Region) returns (MissingRegions) {}
}

message MissingRegions {
  repeated Region regions = 1;
}
